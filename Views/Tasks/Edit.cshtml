@model InMemoryTaskManagement.Models.Task

@{
    ViewData["Title"] = "Edit Task";
}

<h1>Edit Task</h1>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <!-- Form fields same as Create -->
    <div class="form-group">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control"/>
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DueDate"></label>
        <input asp-for="DueDate" class="form-control" type="date"/>
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Category"></label>
        <input asp-for="Category" class="form-control"/>
        <span asp-validation-for="Category" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Priority"></label>
        <select asp-for="Priority" class="form-control" asp-items="Html.GetEnumSelectList<InMemoryTaskManagement.Models.TaskPriority>()"></select>
        <span asp-validation-for="Priority" class="text-danger"></span>
    </div>
    <div class="form-group form-check">
        <input asp-for="IsCompleted" class="form-check-input" />
        <label asp-for="IsCompleted" class="form-check-label"></label>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
